#to maximize winning player1 places his symbol at 1,1 index
import numpy as np
board=np.array([['-','-','-'],['-','-','-'],['-','-','-']])
p1s='x'
p2s='o'
def place(symbol):
    print(np.matrix(board))
    while 1:
        row=int(input('Enter row - 1 or 2 or 3: '))
        col=int(input('Enter col - 1 or 2 or 3: '))
        if row >0 and row <4 and col>0 and col<4 and board[row-1][col-1]=='-':
            break
        else:
            print("invalid input")
    board[row-1][col-1]=symbol  
def check_rows(symbol):
    for i in range(3):
        count=0
        for c in range(3):
            if board[i][c]==symbol:
                count+=1
        if count==3:
            print(symbol,"has won")
            return True
    return False
def check_cols(symbol):
    for i in range(3):
        count=0
        for c in range(3):
            if board[c][i]==symbol:
                count+=1
        if count==3:
            print(symbol,"has won")
            return True
    return False
def check_diagnols(symbol):
    if (board[0][0]==board[1][1] and board[1][1]==board[2][2])  and board[1][1]==symbol:
       print(symbol,"has won")
       return True
    if (board[0][2]==board[1][1] and board[1][1]==board[2][0])  and board[1][1]==symbol:
       print(symbol,"has won")
       return True
    return False
def won(symbol):
    return check_rows(symbol) or check_cols(symbol)  or check_diagnols(symbol)
def play():
    for i in range(9):
        if(i%2==0):
            print("player_1 choice('x')")
            place(p1s)
            if won(p1s):
                break
        else:
            print("player_2 choice('o')")
            place(p2s)
            if won(p2s):
                break
    if not(won(p1s)) and not(won(p2s)):
        print('Draw')
play()
